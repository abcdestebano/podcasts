{"version":3,"file":"static/webpack/static/development/pages/channel.js.223d885896d170461a17.hot-update.js","sources":["webpack:///./pages/channel.js"],"sourcesContent":["import React, { Component, Fragment } from 'react'\nimport Error from './_error';\n\n// COMPONENTS\nimport Layout from '../components/Layout'\nimport Banner from '../components/Banner'\nimport ChannelsGrid from '../components/ChannelsGrid'\nimport PodcastList from '../components/PodcastList';\n\nclass channel extends Component {\n\n   constructor(props) {\n      super(props);\n      this.state = {\n         openPodcast: null\n      }\n   }\n\n   static async getInitialProps({ query, res }) {\n      const idChannel = query.id\n      try {\n         const [requestChannel, requestChildChannels, requestAudios] = await Promise.all([\n            fetch(`http://api.audioboom.com/channels/${idChannel}`),\n            fetch(`http://api.audioboom.com/channels/${idChannel}/child_channels`),\n            fetch(`http://api.audioboom.com/channels/${idChannel}/audio_clips`)\n         ])\n\n         if (requestChannel.status >= 404) {\n            res.statusCode = requestChannel.status\n            return { channel: null, audio_clips: null, channels: null, statusCode: requestChannel.status }\n         }\n\n         const { body: { channel } } = await requestChannel.json()\n         const { body: { channels } } = await requestChildChannels.json()\n         const { body: { audio_clips } } = await requestAudios.json()\n         return { channel, audio_clips, channels, statusCode: 200 }\n      } catch (error) {\n         res.statusCode = 503\n         return { channel: null, audio_clips: null, channels: null, statusCode: 503 }\n      }\n\n   }\n\n   handleOpenPodcast = (event, podcast) => {\n      event.preventDefault()\n      this.setState({ openPodcast: podcast })\n   }\n\n   render() {\n      const { channel, audio_clips, channels, statusCode } = this.props\n      const { openPodcast } = this.state\n      if (statusCode !== 200) {\n         return (<Error statusCode={statusCode} />)\n      }\n      return (\n         <Layout title=\"Podcasts\">\n            <Banner\n               banner={channel.urls.banner_image.original}\n               title={channel.title} />\n            {openPodcast && <div>Hay un podcast abierto</div>}\n            <div className=\"content\">\n               <PodcastList audios={audio_clips} onClickPodcast={this.handleOpenPodcast} />\n               <div className=\"series\">\n                  {channels.length > 0 && <h2>Series</h2>}\n                  <ChannelsGrid channels={channels} elements=\"channels\" />\n               </div>\n            </div>\n            <style jsx>{`\n               .content {\n                  display: grid;\n                  grid-template-columns: 2fr 1fr;\n               }\n               @media only screen and (max-width: 600px) {\n                  .content {\n                     grid-template-columns: 1fr;\n                  }\n               } \n            `}</style>\n         </Layout>\n      )\n   }\n}\n\nexport default channel"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAiCA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAlCA;AACA;AADA;AAFA;AAKA;AACA;;;AA+BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AATA;AAAA;AAAA;AAyBA;;;;;;;;;;;;;AA9DA;AACA;;;AAEA;AACA;;;;AADA;AAAA;AAAA;AACA;AAKA;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;;;AADA;;AACA;AACA;;;AADA;;AACA;AACA;;;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AA9BA;AACA;AAyEA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}